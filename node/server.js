import pg from 'pg';import express from "express";import cors from 'cors';const {Client} = pgconst app = express();app.use(cors());const port = 3000;const client = new Client({    host: "localhost",    user: "postgres",    port: 5432,    password: '12345',    database: "postgres"});client.connect();app.get('/api/cities', (req, res) => {    client.query(`SELECT *                  FROM cidade`, (err, data) => {        if (!err) {            res.send(data.rows)        } else {            console.log(err.message)        }    });});app.get('/api/:cityId/:column/info', (req, res) => {    const {cityId, column} = req.params;    client.query(`SELECT ${column === '*' ? column : column + ' ,ano'}, ano                  FROM informacao                  WHERE cidade_id = ${cityId}                  ORDER BY ano`, (err, data) => {        if (!err) {            res.send(data.rows)        } else {            console.log(err.message)        }    })});app.get('/api/:cityId/districts/:page', (req, res) => {    const {cityId, page} = req.params;    client.query(`SELECT b.*                  FROM bairro b                  WHERE b.cidade_id = ${cityId}                  ORDER BY b.nome                  LIMIT 10                  OFFSET ${10 * page}`, (err, data) => {        if (!err) {            client.query(`SELECT count(b.bairro_id)                          FROM bairro b                          WHERE b.cidade_id = ${cityId}                          `, (err, count) => {                data.count = count;                res.send(data)            })        } else {            console.log(err.message)        }    })});app.listen(port, () => {    console.log("SERVER RUNNING: http://localhost:3000")})